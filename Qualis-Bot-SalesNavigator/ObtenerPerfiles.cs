///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Qualis_Bot_SalesNavigator
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ObtenerPerfiles recording.
    /// </summary>
    [TestModule("d5f4d1d6-5fda-4b8c-91fd-f76789ada543", ModuleType.Recording, 1)]
    public partial class ObtenerPerfiles : ITestModule
    {
        /// <summary>
        /// Holds an instance of the Qualis_Bot_SalesNavigatorRepository repository.
        /// </summary>
        public static Qualis_Bot_SalesNavigatorRepository repo = Qualis_Bot_SalesNavigatorRepository.Instance;

        static ObtenerPerfiles instance = new ObtenerPerfiles();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ObtenerPerfiles()
        {
            Keyword = "CIO";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ObtenerPerfiles Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable Keyword.
        /// </summary>
        [TestVariable("0fa56b65-017b-4735-9698-502fd43ac7da")]
        public string Keyword
        {
            get { return repo.Keyword; }
            set { repo.Keyword = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            try {
                Report.Log(ReportLevel.Info, "Wait", "(Optional Action)\r\nWaiting 3s to exist. Associated repository item: 'ContinueAndFail.Li_ExistUnResultado'", repo.ContinueAndFail.Li_ExistUnResultadoInfo, new ActionTimeout(3000), new RecordItemIndex(0));
                repo.ContinueAndFail.Li_ExistUnResultadoInfo.WaitForExists(3000);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(0)); }
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'InicioSalesNavigator.Btn_CargoActual' at Center.", repo.InicioSalesNavigator.Btn_CargoActualInfo, new RecordItemIndex(1));
            //repo.InicioSalesNavigator.Btn_CargoActual.Click();
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey down}{Akey}{LControlKey up}{Back}' with focus on 'InicioSalesNavigator.GlobalTypeaheadSearchInput'.", repo.InicioSalesNavigator.GlobalTypeaheadSearchInputInfo, new RecordItemIndex(2));
            repo.InicioSalesNavigator.GlobalTypeaheadSearchInput.PressKeys("{LControlKey down}{Akey}{LControlKey up}{Back}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Keyword' with focus on 'InicioSalesNavigator.GlobalTypeaheadSearchInput'.", repo.InicioSalesNavigator.GlobalTypeaheadSearchInputInfo, new RecordItemIndex(3));
            repo.InicioSalesNavigator.GlobalTypeaheadSearchInput.PressKeys(Keyword);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(4));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}'.", new RecordItemIndex(5));
            Keyboard.Press("{Return}");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
